- name: Check if i386 is enabled
  shell: dpkg --print-foreign-architectures | grep i386
  register: result_i386_check
  changed_when: result_i386_check.rc == 1
  failed_when: result_i386_check.rc > 1

- name: Enable i386 architecture
  command: dpkg --add-architecture i386
  when: result_i386_check.rc == 1

# curl is used by elxtools scripts, but generally useful anyway
# graphviz is used by plantuml intellij/eclipse plugins
# rpm is useful to inspect our generated rpms
# ncdu is a lightweight CLI disk space analyzer
- name: Install useful utilities
  apt:
    name: "{{ item }}"
    install_recommends: no
  with_items:
    - curl
    - graphviz
    - rpm
    - dos2unix
    - ncdu
    - sshpass

# Some vagrant base boxes are not set to our timezone
- name: Set timezone
  timezone:
    name: America/Toronto
  register: timezone

# Recommended for cron to see new timezone
- name: Restart crond
  service:
    name: cron
    state: restarted
  when: timezone.changed

# Setup DNS name resolver on older Ubuntu releases
- name: Remove existing search entry in dns name resolver
  lineinfile:
    dest: /etc/resolvconf/resolv.conf.d/base
    regexp: 'search .*'
    state: absent
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version < '18'

- name: Add ericsson domains to dns name resolver
  lineinfile:
    dest: /etc/resolvconf/resolv.conf.d/base
    line: 'search javacc.sero.gic.ericsson.se vss.mo.ca.am.ericsson.se mo.ca.am.ericsson.se ericsson.se'
    state: present
    create: yes
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version < '18'

- name: Update name resolver
  command: resolvconf -u
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version < '18'

# Setup DNS name resolver on Ubuntu 18 and up
- name: Add ericsson netplan config file
  copy:
    src: 50-ericsson.yaml
    dest: /etc/netplan/
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= '18'

- name: Apply netplan config changes
  shell: netplan apply
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= '18'

# Install AFS application mount
# Note: Use 'kinit' to authenticate to the AFS server, then 'aklog'.

- name: afs debconf - openafs-client/dynroot
  debconf:
    name: openafs-client
    question: openafs-client/dynroot
    value: Yes
    vtype: select
    
- name: afs debconf - openafs-client/run-client
  debconf:
    name: openafs-client
    question: openafs-client/run-client
    value: true
    vtype: boolean
    
- name: afs debconf - openafs-client/thiscell
  debconf:
    name: openafs-client
    question: openafs-client/thiscell
    value: sunrise.ericsson.se
    vtype: string

- name: afs debconf - openafs-client/afsdb
  debconf:
    name: openafs-client
    question: openafs-client/afsdb
    value: true
    vtype: boolean

- name: afs debconf - openafs-client/fakestat
  debconf:
    name: openafs-client
    question: openafs-client/fakestat
    value: true
    vtype: boolean

- name: afs debconf - openafs-client/crypt
  debconf:
    name: openafs-client
    question: openafs-client/crypt
    value: true
    vtype: boolean

- name: afs debconf - openafs-client/cachesize
  debconf:
    name: openafs-client
    question: openafs-client/cachesize
    value: 100000
    vtype: string

- name: afs debconf - openafs-client/cell-info
  debconf:
    name: openafs-client
    question: openafs-client/cell-info
    value: sunrise.ericsson.se
    vtype: string

- name: afs debconf - krb5-config/default_realm
  debconf:
    name: openafs-client
    question: krb5-config/default_realm
    value: ERICSSON.SE
    vtype: string

- name: afs debconf - krb5-config/add_servers_realm
  debconf:
    name: openafs-client
    question: krb5-config/add_servers_realm
    value: ERICSSON.SE
    vtype: string

- name: Install packages
  apt:
    name: "{{ item }}"
    install_recommends: no
  with_items:
    - krb5-user
    - openafs-client
    - openafs-krb5
    - openafs-modules-dkms
  register: packages

- name: Configure openafs server
  copy:
    src: files/CellServDB
    dest: /etc/openafs/CellServDB
  when: packages.changed
  
- name: Restart openafs service
  service:
    name: openafs-client
    state: restarted
  when: packages.changed
