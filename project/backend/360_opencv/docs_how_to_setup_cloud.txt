#For UBUNTU 16.04
#login as super user
sudo -i

#install nvidia driver
sudo apt-get update #update
sudo apt install ubuntu-drivers-common #get ubuntu driver installer
ubuntu-drivers devices #check your gpu specs
sudo apt-get install nvidia-384 #install driver for nv tesla k80

#install cuda 9.0 download from https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal

sudo sh cuda_9.0.176_384.81_linux.run

n y y y  # do not install driver again yes to all and default folders

#install patches
sudo sh cuda_9.0.176_384.1_linux.run
sudo sh cuda_9.0.176_384.2_linux.run
sudo sh cuda_9.0.176_384.3_linux.run
sudo sh cuda_9.0.176_384.4_linux.run

#download cudnn from https://developer.nvidia.com/rdp/cudnn-download
cd Downloads/
tar -zxvf cudnn-9.0-linux-x64-v7.6.4.38.tgz 
cd cuda/
sudo cp include/cudnn.h /usr/local/cuda-9.0/include
sudo cp lib64/libcudnn* /usr/local/cuda-9.0/lib64
sudo chmod a+r /usr/local/cuda-9.0/include/cudnn.h   /usr/local/cuda-9.0/lib64/libcudnn*

#make sure gcc version is lower than 6.0
#install opencv 3.4.0  https://www.pytorials.com/how-to-install-opencv340-on-ubuntu1604/

sudo apt-get install build-essential 
sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libxvidcore-dev libx264-dev
sudo apt-get install libgtk-3-dev
sudo apt-get install libatlas-base-dev gfortran pylint
sudo apt-get install python2.7-dev python3.5-dev

sudo apt-get install python-numpy
sudo apt-get install python3-numpy
sudo apt-get install libpython-dev libpython3-dev

sudo apt-get install qt5-default
sudo pt install cmake

wget https://github.com/opencv/opencv/archive/3.4.0.zip -O opencv-3.4.0.zip
wget https://github.com/opencv/opencv_contrib/archive/3.4.0.zip -O opencv_contrib-3.4.0.zip

sudo apt-get install unzip

unzip opencv-3.4.0.zip
unzip opencv_contrib-3.4.0.zip

cd  opencv-3.4.0
mkdir build
cd build
sudo cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.0/modules -D BUILD_opencv_python3=ON\ -D PYTHON3_EXECUTABLE=/usr/bin/python3.5\-D PYTHON3_INCLUDE_DIR=/usr/include/python3.5m \-D PYTHON_INCLUDE_DIR2 = /usr/include/x86_64-linux-gnu/python3.5\ -D PYTHON3_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so.1 \-D PYTHON3_NUMPY_PATH=/usr/local/lib/python3/dist-packages \-D OPENCV_ENABLE_NONFREE=True ..

sudo make -j
sudo make install
sudo ldconfig

cd usr/local/lib/python3.5/dist-packages/
sudo mv cv2.cpython-36m-x86_64-linux-gnu.so cv2.so

#before running yolo
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64

#install django
sudo pip3 install Django
#install readNet module for cv2 dnn
sudo pip3 install opencv-contrib-python

sudo apt install python-pip
sudo pip install opencv-contrib-python



#how to delete driver

sudo rm /etc/apt/sources.list.d/cuda.list
sudo apt-get clean
sudo apt-get update
sudo apt install -f

sudo apt-get remove --purge '^nvidia-.*'